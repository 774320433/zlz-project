列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）
一个列表最多可以包含 232 - 1 个元素 (4294967295, 每个列表超过40亿个元素)

blpop [key1] [key2] timeout //Blpop 命令移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止 blpop student 10
brpop [key1] [key2] timeout //Brpop 命令移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止 brpop student 10
brpoplpush [source] [target] timeout //Brpoplpush 命令从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止 brpoplpush student student1 10
lindex [key] index //Lindex 命令用于通过索引获取列表中的元素。你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推 lindex student 0 || lindex student -1
linsert [key] before|after pivot value // Linsert 命令用于在列表的元素前或者后插入元素。当指定元素不存在于列表中时，不执行任何操作 linsert student after 1 0 , linsert student before 0 1
llen [key] //Llen 命令用于返回列表的长度。 如果列表 key 不存在，则 key 被解释为一个空列表，返回 0 。 如果 key 不是列表类型，返回一个错误
lpop [key] //Lpop 命令用于移除并返回列表的第一个元素
lpush [key] value1 value2//Lpush 命令将一个或多个值插入到列表头部。 如果 key 不存在，一个空列表会被创建并执行 LPUSH 操作。 当 key 存在但不是列表类型时，返回一个错误
lpushx [key] value1 value2 //Lpushx 将一个值插入到已存在的列表头部，列表不存在时操作无效
lrange [key] start end //Lrange 返回列表中指定区间内的元素，区间以偏移量 START 和 END 指定。 其中 0 表示列表的第一个元素， 1 表示列表的第二个元素，以此类推。 你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。
lset [key] index value //Lset 通过索引来设置元素的值 lset student 0 "value"
ltrim [key] start end //Ltrim 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。下标 0 表示列表的第一个元素，以 1 表示列表的第二个元素，以此类推。 你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推
rpop [key] //Rpop 命令用于移除并返回列表的最后一个元素
rpoplpush [source] [target]//Rpoplpush 命令用于移除列表的最后一个元素，并将该元素添加到另一个列表并返回
rpushx [key] value1 value2 //Rpushx 命令用于将一个值插入到已存在的列表尾部(最右边)。如果列表不存在，操作无效
